load("@llvm-project//mlir:tblgen.bzl", "gentbl_cc_library")
load("@rules_cc///cc:cc_binary.bzl", "cc_binary")
load("@rules_cc///cc:cc_library.bzl", "cc_library")
load("@rules_cc///cc:cc_test.bzl", "cc_test")
##load("//third_party/tensorflow:tensorflow.google.bzl", "get_compatible_with_portable")

package(
    default_applicable_licenses = ["//third_party/stablehlo:license"],  # copybara:comment
    default_visibility = ["//learning/brain/mlir:stablehlo_friends"],
    licenses = ["notice"],
)

#####
# [WIP] TableGen
#####

cc_binary(
    name = "mlir_builder_tblgen",
    srcs = ["MlirBuilderTblgen.cpp"],
    ##compatible_with = get_compatible_with_portable(),
    includes = ["."],
    deps = [
        "@com_google_absl//absl/container:flat_hash_set",
        "@llvm-project/llvm:Support",
        "@llvm-project/llvm:TableGen",
        "@llvm-project/mlir:Support",
        "@llvm-project/mlir:TableGen",
    ],
)

####
## MlirBuilder base class
####

cc_library(
    name = "mlir_builder",
    srcs = ["MlirBuilder.cpp"],
    hdrs = ["MlirBuilder.h"],
    ##compatible_with = get_compatible_with_portable(),
    includes = ["."],
    deps = [
        ":attr_type_builder_util",
        "@llvm-project/llvm:Support",
        "@llvm-project/mlir:IR",
        "@llvm-project/mlir:Support",
    ],
)

####
## Attr / Type Builder Helpers
####

cc_library(
    name = "attr_type_builder_util",
    srcs = ["AttrTypeBuilderUtil.cpp"],
    hdrs = ["AttrTypeBuilderUtil.h"],
    ##compatible_with = get_compatible_with_portable(),
    includes = ["."],
    deps = [
        "@llvm-project/llvm:Support",
        "@llvm-project/mlir:IR",
        "@llvm-project/mlir:Support",
    ],
)

cc_test(
    name = "attr_type_builder_util_test",
    srcs = ["AttrTypeBuilderUtilTest.cpp"],
    ##compatible_with = get_compatible_with_portable(),
    includes = ["."],
    deps = [
        ":attr_type_builder_util",
        "//testing/base/public:gunit_main",
        "@llvm-project/llvm:Support",
        "@llvm-project/mlir:IR",
        "@llvm-project/mlir:Support",
    ],
)

#####
## Dialect-specific builders
####

gentbl_cc_library(
    name = "chlo_builder_inc",
    ##compatible_with = get_compatible_with_portable(),
    tbl_outs = {
        "ChloBuilder.h.inc": ["-gen-builder-decls"],
        "ChloBuilder.cpp.inc": ["-gen-builder-defs"],
        "ChloBuilder.md": ["-gen-builder-docs"],
    },
    tblgen = ":mlir_builder_tblgen",
    td_file = "//:stablehlo/dialect/ChloOps.td",
    deps = [
        "//:chlo_ops_td_files",
        "@llvm-project//mlir:InferTypeOpInterfaceTdFiles",
        "@llvm-project//mlir:OpBaseTdFiles",
        "@llvm-project//mlir:SideEffectInterfacesTdFiles",
    ],
)

cc_library(
    name = "chlo_builder",
    srcs = ["ChloBuilder.cpp"],
    hdrs = ["ChloBuilder.h"],
    ##compatible_with = get_compatible_with_portable(),
    includes = ["."],
    deps = [
        ":chlo_builder_inc",
        ":mlir_builder",
        "//third_party/stablehlo:chlo_ops",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Support",
    ],
)

gentbl_cc_library(
    name = "func_builder_inc",
    ##compatible_with = get_compatible_with_portable(),
    tbl_outs = {
        "FuncBuilder.h.inc": ["-gen-builder-decls"],
        "FuncBuilder.cpp.inc": ["-gen-builder-defs"],
        "FuncBuilder.md": ["-gen-builder-docs"],
    },
    tblgen = ":mlir_builder_tblgen",
    td_file = "@llvm-project//mlir:include/mlir/Dialect/Func/IR/FuncOps.td",
    deps = [
        "@llvm-project//mlir:FuncTdFiles",
        "@llvm-project//mlir:InferTypeOpInterfaceTdFiles",
        "@llvm-project//mlir:OpBaseTdFiles",
        "@llvm-project//mlir:SideEffectInterfacesTdFiles",
    ],
)

cc_library(
    name = "func_builder",
    srcs = ["FuncBuilder.cpp"],
    hdrs = ["FuncBuilder.h"],
    ##compatible_with = get_compatible_with_portable(),
    includes = ["."],
    deps = [
        ":func_builder_inc",
        ":mlir_builder",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Support",
    ],
)

gentbl_cc_library(
    name = "stablehlo_builder_inc",
    ##compatible_with = get_compatible_with_portable(),
    tbl_outs = {
        "StablehloBuilder.h.inc": ["-gen-builder-decls"],
        "StablehloBuilder.cpp.inc": ["-gen-builder-defs"],
        "StablehloBuilder.md": ["-gen-builder-docs"],
    },
    tblgen = ":mlir_builder_tblgen",
    td_file = "//third_party/stablehlo:stablehlo/dialect/StablehloOps.td",
    deps = [
        "//third_party/stablehlo:base_td_files",
        "//third_party/stablehlo:stablehlo_ops_td_filegroup",
        "@llvm-project//mlir:InferTypeOpInterfaceTdFiles",
        "@llvm-project//mlir:OpBaseTdFiles",
        "@llvm-project//mlir:ShapeOpsTdFiles",
        "@llvm-project//mlir:SideEffectInterfacesTdFiles",
    ],
)

cc_library(
    name = "stablehlo_builder",
    srcs = ["StablehloBuilder.cpp"],
    hdrs = ["StablehloBuilder.h"],
    ##compatible_with = get_compatible_with_portable(),
    includes = ["."],
    deps = [
        ":attr_type_builder_util",
        ":mlir_builder",
        ":stablehlo_builder_inc",
        "//third_party/stablehlo:stablehlo_ops",
        "//third_party/stablehlo:stablehlo_type_inference",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:InferTypeOpInterface",
        "@llvm-project//mlir:Support",
    ],
)

cc_test(
    name = "stablehlo_builder_test",
    srcs = ["StablehloBuilderTest.cpp"],
    compatible_with = get_compatible_with_portable(),
    includes = ["."],
    deps = [
        ":attr_type_builder_util",
        ":func_builder",
        ":mlir_builder",
        ":stablehlo_builder",
        "//testing/base/public:gunit_main",
        "//third_party/stablehlo:register",
        "//third_party/stablehlo:stablehlo_ops",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Support",
    ],
)

cc_test(
    name = "mlir_builder_test",
    srcs = ["MlirBuilderTest.cpp"],
    ##compatible_with = get_compatible_with_portable(),
    includes = ["."],
    deps = [
        ":attr_type_builder_util",
        ":chlo_builder",
        ":func_builder",
        ":mlir_builder",
        ":stablehlo_builder",
        "//:stablehlo_ops",
        "//stablehlo:register",
        "//testing/base/public:gunit_main",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Support",
        "@llvm-project//mlir:TosaDialect",
    ],
)
